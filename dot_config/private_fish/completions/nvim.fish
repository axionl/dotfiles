# Completions for NeoVim
complete -c nvim -F -d "Edit file(s)"
complete -c nvim -x -s t -d "[options] -t <tag> | Edit file where tag is defined"
complete -c nvim -x -s q -d "[options] -q <errorfile> | Edit file with first error"
complete -c nvim -x -l cmd -d "<cmd> | Execute <cmd> before any config"
complete -c nvim -x -s c -d "<cmd> | Execute <cmd> after config and first file"
complete -c nvim -f -s b -d "Binary mode"
complete -c nvim -f -s d -d "Duff mode"
complete -c nvim -f -s e -s E -d "Ex mode"
complete -c nvim -f -s es -s Es -d "Slient (batch) mode"
complete -c nvim -f -s h -l help -d "Print this help message"
complete -c nvim -F -s i -d "<shada> | Use this shada file"
complete -c nvim -f -s m -d "Modifications (writing files) not allowed"
complete -c nvim -f -s M -d "Modifications in text not allowed"
complete -c nvim -f -s n -d "No swap file, use memory only"
complete -c nvim -x -s o -d "[N] | Open N windows (default: one per file)"
complete -c nvim -x -s O -d "[N] | Open N vertical windows (default: one per file)"
complete -c nvim -x -s p -d "[N] | Open N tab pages (default: one per file)"
complete -c nvim -f -s r -s L -d "List swap files"
complete -c nvim -F -s r -s r -d "<file> | Recover edit state for this file"
complete -c nvim -f -s R -d "Read-only mode"
complete -c nvim -x -s S -d "<session> | Source <session> after loading the first file"
complete -c nvim -x -s s -d "<scriptin> | Read Normal mode commands from <scriptin>"
complete -c nvim -F -s u -d "<config> | Use this config file"
complete -c nvim -x -s v -l version -d "Print version information"
complete -c nvim -x -s V -d "[N][file] | Verbose [level][file]"
complete -c nvim -f -l api-info -d " Write msgpack-encoded API metadata to stdout"
complete -c nvim -f -l embed -d "Use stdin/stdout as a msgpack-rpc channel"
complete -c nvim -f -l headless -d "Don't start a user interface"
complete -c nvim -x -l listen -d "<address> | Serve RPC API fomr this address"
complete -c nvim -f -l noplugin -d "Don't load plugins"
complete -c nvim -F -l startuptime -d "<file> | Write start timing messages to <file>"
